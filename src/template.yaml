AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >-
  tech-article-librarian

Parameters:
  ProjectName:
    Type: String
    Default: tech-article-librarian
    Description: Enter the project name
  FunctionNamePrefix:
    Type: String
    Default: tech-article-librarian
    Description: Enter the function name
  SecretName:
    Type: String
    Default: tech-article-librarian-secret
    Description: Enter the secret name

Resources:
  SecretManager:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub "${SecretName}"
      Description: "Secret for tech-article-librarian"

  SlackFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${FunctionNamePrefix}-slack"
      RetentionInDays: 1

  LineFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${FunctionNamePrefix}-line"
      RetentionInDays: 1

  PersistNewArticleFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${FunctionNamePrefix}-persist-new-article"
      RetentionInDays: 1

  SlackFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${FunctionNamePrefix}-slack"
      CodeUri: "."
      Handler: ./handlers/slack.Handler
      Runtime: nodejs22.x
      MemorySize: 256
      Architectures:
        - arm64
      Timeout: 3
      Events:
        SlackWebhook:
          Type: Api
          Properties:
            Path: /slack
            Method: POST
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource:
                - !GetAtt PersistNewArticleFunction.Arn
      LoggingConfig:
        LogGroup: !Ref SlackFunctionLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Target: es2022
        Minify: true
        EntryPoints:
          - ./handlers/slack.ts
        Sourcemap: true

  LineFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${FunctionNamePrefix}-line"
      CodeUri: "."
      Handler: ./handlers/line.Handler
      Runtime: nodejs22.x
      MemorySize: 256
      Architectures:
        - arm64
      Timeout: 60
      Events:
        PublishArticlesHalfPast:
          Type: Schedule
          Properties:
            # JST: 9:30, 12:30, 19:30, 5:30
            Schedule: "cron(30 0,3,10,20 ? * * *)"
            Name: "PublishArticlesHalfPast"
            Description: "Publish articles to LINE at half past the hour (JST)"
        PublishArticlesOnTheHour:
          Type: Schedule
          Properties:
            # JST: 15:00, 17:00, 18:00, 21:00, 7:00
            Schedule: "cron(0 6,8,9,12,22 ? * * *)"
            Name: "PublishArticlesOnTheHour"
            Description: "Publish articles to LINE on the hour (JST)"

      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref SecretManager
      LoggingConfig:
        LogGroup: !Ref LineFunctionLogGroup
      Environment:
        Variables:
          ACL_LINE_CHANNEL_ACCESS_TOKEN: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_LINE_CHANNEL_ACCESS_TOKEN}}"
          ACL_LINE_CHANNEL_ACCESS_TOKEN_MIXED: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_LINE_CHANNEL_ACCESS_TOKEN_MIXED}}"
          ACL_LINE_USER_ID: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_LINE_USER_ID}}"
          ACL_LINE_API_ENDPOINT: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_LINE_API_ENDPOINT}}"
          ACL_FIREBASE_APP_ID: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_FIREBASE_APP_ID}}"
          ACL_LINE_NO_IMAGE_URL: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_LINE_NO_IMAGE_URL}}"
          ACL_OGP_USER_AGENT: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_OGP_USER_AGENT}}"
          ACL_FIREBASE_USER_ID: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_FIREBASE_USER_ID}}"
          ACL_FIREBASE_SERVICE_ACCOUNT_KEY: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_FIREBASE_SERVICE_ACCOUNT_KEY}}"
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Target: es2022
        Minify: true
        EntryPoints:
          - ./handlers/line.ts
        Sourcemap: true

  PersistNewArticleFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${FunctionNamePrefix}-persist-new-article"
      CodeUri: "."
      Handler: ./handlers/article.Handler
      Runtime: nodejs22.x
      MemorySize: 256
      Architectures:
        - arm64
      Timeout: 20
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref SecretManager
      LoggingConfig:
        LogGroup: !Ref PersistNewArticleFunctionLogGroup
      Environment:
        Variables:
          ACL_LINE_CHANNEL_ACCESS_TOKEN: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_LINE_CHANNEL_ACCESS_TOKEN}}"
          ACL_LINE_CHANNEL_ACCESS_TOKEN_MIXED: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_LINE_CHANNEL_ACCESS_TOKEN_MIXED}}"
          ACL_LINE_USER_ID: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_LINE_USER_ID}}"
          ACL_LINE_API_ENDPOINT: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_LINE_API_ENDPOINT}}"
          ACL_FIREBASE_APP_ID: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_FIREBASE_APP_ID}}"
          ACL_LINE_NO_IMAGE_URL: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_LINE_NO_IMAGE_URL}}"
          ACL_OGP_USER_AGENT: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_OGP_USER_AGENT}}"
          ACL_FIREBASE_USER_ID: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_FIREBASE_USER_ID}}"
          ACL_FIREBASE_SERVICE_ACCOUNT_KEY: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:ACL_FIREBASE_SERVICE_ACCOUNT_KEY}}"
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Target: es2022
        Minify: true
        EntryPoints:
          - ./handlers/article.ts
        Sourcemap: true

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: "true"

Outputs:
  SlackWebhookApi:
    Description: "API Gateway endpoint URL for Prod stage for Slack function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/slack/"
  SlackFunction:
    Description: "Slack Lambda Function ARN"
    Value: !GetAtt SlackFunction.Arn
  SlackFunctionIamRole:
    Description: "Implicit IAM Role created for Slack function"
    Value: !GetAtt SlackFunction.Arn
